// üêº
const isToday = (someDate) => {
  const today = new Date();
  return someDate.getDate() === today.getDate()
    && someDate.getMonth() === today.getMonth()
    && someDate.getFullYear() === today.getFullYear();
};

// –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∏–Ω–ø—É—Ç—ã —Å –æ–±–µ—Ä—Ç–∫–∞–º–∏
const getErrorElm = (input) => input.closest('.form__elm');

// –≤–∞–ª–∏–¥–∞—Ü–∏—è
class Validation {
  static get errorClass() {
    return 'has-error';
  }

  static addErrorClass(input, isAdd) {
    if (isAdd) {
      getErrorElm(input)
        .classList
        .add(this.errorClass);
    }
  }

  static removeErrorClass(input) {
    getErrorElm(input)
      .classList
      .remove(this.errorClass);
  }

  static checkName(input) {
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤
    const { value } = input;
    const isValid = value.length > 1;

    this.addErrorClass(input, !isValid);

    console.warn('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏', isValid);
    return isValid;
  }

  static checkPhone(input) {
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
    // –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ inputmask
    const isValid = input.inputmask.isComplete();

    this.addErrorClass(input, !isValid);

    console.warn('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞', isValid);
    return isValid;
  }

  static checkSelect(input) {
    const { value } = input;
    const isValid = !!value || value === 0;

    this.addErrorClass(input, !isValid);

    console.warn('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–ª–µ–∫—Ç–∞', isValid);
    return isValid;
  }

  static checkDate(input) {
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
    // –¥–∞—Ç–∞ < —Å–µ–≥–æ–¥–Ω—è -> –Ω–µ –≤–∞–ª–∏–¥–Ω–∞
    const { value } = input; // yyyy-mm-dd

    if (!value) {
      console.warn('–ò–Ω–ø—É—Ç-–¥–∞—Ç–∞ –ø—É—Å—Ç–æ–π', false);
      input.classList.add(this.errorClass);
      this.addErrorClass(input, true);
      return false;
    }

    const date = new Date(value);
    const isValid = isToday(date) || date > Date.now();

    this.addErrorClass(input, !isValid);

    console.warn('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã', isValid);
    return isValid;
  }

  static check(type, input) {
    switch (type) {
      case 'name':
        return this.checkName(input);
      case 'phone':
        return this.checkPhone(input);
      case 'select':
        return this.checkSelect(input);
      case 'date':
        return this.checkDate(input);
      default:
        return false;
    }
  }
}

export default Validation;
