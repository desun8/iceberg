// üêº
// –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–ø—É—Ç-–º–∞—Å–∫–∏
import Inputmask from 'inputmask';
import Validation from './Validation';

class Mask {
  static get regName() {
    return '^[–ê-–Ø–∞-—èA-Za-z]+( [–ê-–Ø–∞-—èA-Za-z]+)*$';
  }

  static get InputMask() {
    // –°—Ç—Ä–∞–Ω–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å–±–æ—Ä—â–∏–∫–∞.
    // –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ, –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å "Inputmask.default"
    return Inputmask.default;
  }

  // —É–±–∏—Ä–∞–µ–º css –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏
  static onKeyDown(event) {
    Validation.removeErrorClass(event.target);
  }

  static name(input) {
    const {
      InputMask,
      onKeyDown,
      regName,
    } = this;

    new InputMask({
      regex: regName,
      placeholder: '',
      showMaskOnHover: false,
      onKeyDown,
    }).mask(input);
  }

  // –ú–æ–∂–Ω–æ —Ç—É—Ç –∂–µ –¥–ª—è –∏–Ω–ø—É—Ç–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å inputmode="tel"
  // –ß—Ç–æ–±—ã –Ω–∞ —Ç–∞—á–∞—Ö –ø–æ—è–≤–ª—è–ª–∞—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–±–æ—Ä–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  // –ò–ª–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ —Ä–∞–∑–º–µ—Ç–∫–µ —ç—Ç–æ –¥–µ–ª–∞—Ç—å
  static phone(input) {
    const {
      InputMask,
      onKeyDown,
    } = this;
    new InputMask(
      '+7 (999) 999 99 99', {
        placeholder: 'x',
        onKeyDown,
      },
    ).mask(input);
  }
}

export default Mask;
